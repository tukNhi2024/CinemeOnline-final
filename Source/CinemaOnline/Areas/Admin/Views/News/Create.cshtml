@using System.Web.Mvc
@using BELibrary.Constant
@using BELibrary.Entity
@using WebGrease
@model News
@{
    ViewBag.Title = ViewBag.Feature + " " + ViewBag.Element;
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<!-- FORM VALIDATION ON TABS -->
<!--===================================================-->
<div class="panel">
    <div class="panel-heading">
        <h3 class="panel-title">@ViewBag.Feature</h3>
    </div>
    <form id="news-form" class="form-horizontal" action="#" method="post">
        <div class="panel-body">

            <!-- Tabs Content -->
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (ViewBag.IsEdit)
            {
                <input type="hidden" value="true" name="IsEdit" />
                <input type="hidden" value="@Model.Id" name="Id" />
                <input type="hidden" value="@Model.CreationTime" name="CreationTime" />
                <input type="hidden" value="@Model.CreaterId" name="CreaterId" />
            }
            else
            {
                <input type="hidden" value="false" name="IsEdit" />
            }
            <div class="form-group row">
                <div class="col-lg-12">
                    <label class="control-label">Tiêu dề*</label>
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @maxlength = 250 } })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-lg-12">
                    <label class="control-label">Mô tả ngắn*</label>
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @row = "3", @maxlength = 250 })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-lg-12">
                    <label class="control-label">Nội dung chi tiết</label>
                    @Html.TextAreaFor(model => model.Detail, new { @class = "form-control", @id = "Detail", @rows = "50" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-lg-12">
                    <label class="control-label">Banner Url</label>
                    <div class="input-group mar-btm">
                        @Html.EditorFor(model => model.BannerUrl, new { htmlAttributes = new { @class = "form-control", @maxlength = 250 } })
                        <span class="input-group-btn" onclick="ChooseImg()">
                            <a class="btn btn-mint btn-icon"><i class="fa fa-cloud-upload icon-lg"></i></a>
                        </span>
                    </div>
                    @if (ViewBag.isEdit)
                    {
                        <img class="img img-thumbnail" style="max-width: 500px" id="Img" src="@Model.BannerUrl" />
                    }
                    else
                    {
                        <img class="img img-thumbnail" id="Img" src="" />
                    }
                </div>
            </div>
        </div>
        <div class="panel-footer clearfix">
            <div class="row">
                <div class="col-lg-12">
                    @{
                        if (ViewBag.IsEdit)
                        {
                            <button type="submit" class="btn btn-success pull-right">Lưu</button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-success pull-right">Thêm</button>
                        }
                    }
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        const baseUrl = "/admin/News";
        //Valid
        const fields = {
            Title: {
                container: 'tooltip',
                validators: {
                    notEmpty: {
                        message: 'Tên loại phim là cần thiết và không để trống!'
                    }
                }
            }
        }
        validator.valid('news-form', fields, (e) => {
            e.preventDefault();
            var content = CKEDITOR.instances['Detail'].getData();
            var formData = new FormData(document.getElementById('news-form'));
            formData.set('Detail', content);
            ajax.createOrUpdate(`${baseUrl}/CreateOrEdit`, formData,
                (response) => {
                    if (response.status) {
                        notify.push(response.mess, notify.EType.SUCCESS);
                        notify.loading();
                        $('#editing-modal').modal('hide');
                        setTimeout(function () {
                            window.location.href = window.location.href;
                        }, 3000);

                    } else {
                        notify.push(response.mess, notify.EType.DANGER);
                    }
                },
                (jqXHR, textStatus) => {
                    let mess = "Request failed: " + textStatus;
                    notify.push(mess, notify.EType.DANGER);
                }
            );
        });

        CKEDITOR.replace("Detail", {
            height: 500
        });

        function ChooseImg() {
            var finder = new CKFinder();
            finder.selectActionFunction = function (fileUrl) {
                $("#Img").attr("src", fileUrl);
                $("#BannerUrl").val(fileUrl);
            }
            finder.popup();
        }
    </script>
}